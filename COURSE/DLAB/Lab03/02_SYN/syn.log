
                        DC Professional (TM)
                           DC Expert (TM)
                            DC Ultra (TM)
                       FloorPlan Manager (TM)
                          HDL Compiler (TM)
                         VHDL Compiler (TM)
                        Library Compiler (TM)
                      DesignWare Developer (TM)
                          DFT Compiler (TM)
                            BSD Compiler
                         Power Compiler (TM)

           Version B-2008.09-SP2 for linux -- Nov 28, 2008
              Copyright (c) 1988-2008 by Synopsys, Inc.
                         ALL RIGHTS RESERVED

This software and the associated documentation are confidential and 
proprietary to Synopsys, Inc. Your use or disclosure of this software 
is subject to the terms and conditions of a written license agreement 
between you, or your company, and Synopsys, Inc.

The above trademark notice does not imply that you are licensed to use 
all of the listed products. You are licensed to use only those products 
for which you have lawfully obtained a valid license key.

Initializing...
Error: version conflict for package "Tk": have 8.4, need 8.3
	Use error_info for more info. (CMD-013)
Information: script '/usr/cad/syntest/turboscan/cur/tc_rtl/lib/tk8.3.1/tk.tcl'
	stopped at line 17 due to error. (CMD-081)
#======================================================
#
# Synopsys Synthesis Scripts (Design Vision dctcl mode)
#
#======================================================
#======================================================
#  Set Libraries
#======================================================
set search_path {list . /cad/EDA/synopsys/synthesis/2008.09-sp2/libraries/syn 						/cad/EDA/synopsys/synthesis/2008.09-sp2/dw/sim_ver                         /cad/CBDLIB/CBDK_IC_Contest_v2.1/SynopsysDC/db

				../01_RTL .. .}
list . /cad/EDA/synopsys/synthesis/2008.09-sp2/libraries/syn       /cad/EDA/synopsys/synthesis/2008.09-sp2/dw/sim_ver                         /cad/CBDLIB/CBDK_IC_Contest_v2.1/SynopsysDC/db

    ../01_RTL .. .
set link_library {* slow.db dw_foundation.sldb}
* slow.db dw_foundation.sldb
set synthetic_library {standard.sldb dw_foundation.sldb}
standard.sldb dw_foundation.sldb
set target_library {slow.db}
slow.db
#======================================================
#  Global Parameters
#======================================================
set DESIGN "IMPOR"
IMPOR
set CLK_period 4.0
4.0
set hdlin_ff_always_sync_set_reset true
true
#======================================================
#  Read RTL Code
#======================================================
read_verilog -rtl $DESIGN\.v
Loading db file '/cad/CBDLIB/CBDK_IC_Contest_v2.1/SynopsysDC/db/slow.db'
Loading db file '/cad/EDA/synopsys/synthesis/2008.09-sp2/libraries/syn/dw_foundation.sldb'
Loading db file '/usr/cad/synopsys/synthesis/cur/libraries/syn/gtech.db'
Loading db file '/usr/cad/synopsys/synthesis/cur/libraries/syn/standard.sldb'
  Loading link library 'slow'
  Loading link library 'gtech'
Loading verilog file '/users/dlab2016/2016dlab31/Lab03/01_RTL/IMPOR.v'
Running PRESTO HDLC
Compiling source file /users/dlab2016/2016dlab31/Lab03/01_RTL/IMPOR.v

Statistics for case statements in always block at line 50 in file
	'/users/dlab2016/2016dlab31/Lab03/01_RTL/IMPOR.v'
===============================================
|           Line           |  full/ parallel  |
===============================================
|            59            |    auto/auto     |
|            70            |    auto/auto     |
===============================================

Statistics for case statements in always block at line 175 in file
	'/users/dlab2016/2016dlab31/Lab03/01_RTL/IMPOR.v'
===============================================
|           Line           |  full/ parallel  |
===============================================
|           179            |    auto/auto     |
===============================================

Inferred memory devices in process
	in routine IMPOR line 29 in file
		'/users/dlab2016/2016dlab31/Lab03/01_RTL/IMPOR.v'.
===============================================================================
|    Register Name    |   Type    | Width | Bus | MB | AR | AS | SR | SS | ST |
===============================================================================
|       rst_reg       | Flip-flop |   1   |  N  | N  | Y  | N  | N  | N  | N  |
|      ready_reg      | Flip-flop |   1   |  N  | N  | N  | Y  | N  | N  | N  |
===============================================================================

Inferred memory devices in process
	in routine IMPOR line 41 in file
		'/users/dlab2016/2016dlab31/Lab03/01_RTL/IMPOR.v'.
===============================================================================
|    Register Name    |   Type    | Width | Bus | MB | AR | AS | SR | SS | ST |
===============================================================================
|      cnt2_reg       | Flip-flop |  21   |  Y  | N  | Y  | N  | N  | N  | N  |
|      cnt1_reg       | Flip-flop |  21   |  Y  | N  | Y  | N  | N  | N  | N  |
===============================================================================

Inferred memory devices in process
	in routine IMPOR line 50 in file
		'/users/dlab2016/2016dlab31/Lab03/01_RTL/IMPOR.v'.
===============================================================================
|    Register Name    |   Type    | Width | Bus | MB | AR | AS | SR | SS | ST |
===============================================================================
|      sta12_reg      | Flip-flop |   3   |  Y  | N  | Y  | N  | N  | N  | N  |
|      sta17_reg      | Flip-flop |   3   |  Y  | N  | Y  | N  | N  | N  | N  |
|      sta11_reg      | Flip-flop |   3   |  Y  | N  | Y  | N  | N  | N  | N  |
|      sta18_reg      | Flip-flop |   3   |  Y  | N  | Y  | N  | N  | N  | N  |
|      sta16_reg      | Flip-flop |   3   |  Y  | N  | Y  | N  | N  | N  | N  |
|      sta10_reg      | Flip-flop |   3   |  Y  | N  | Y  | N  | N  | N  | N  |
|       sta_reg       | Flip-flop |   1   |  N  | N  | Y  | N  | N  | N  | N  |
|      sta14_reg      | Flip-flop |   3   |  Y  | N  | Y  | N  | N  | N  | N  |
|      sta13_reg      | Flip-flop |   3   |  Y  | N  | Y  | N  | N  | N  | N  |
|      sta15_reg      | Flip-flop |   3   |  Y  | N  | Y  | N  | N  | N  | N  |
===============================================================================

Inferred memory devices in process
	in routine IMPOR line 175 in file
		'/users/dlab2016/2016dlab31/Lab03/01_RTL/IMPOR.v'.
===============================================================================
|    Register Name    |   Type    | Width | Bus | MB | AR | AS | SR | SS | ST |
===============================================================================
|       out_reg       | Flip-flop |   3   |  N  | N  | Y  | N  | N  | N  | N  |
|    out_valid_reg    | Flip-flop |   1   |  N  | N  | Y  | N  | N  | N  | N  |
===============================================================================
Information:  Complex logic will not be considered for set/reset inference. (ELAB-2008)
Presto compilation completed successfully.
Current design is now '/users/dlab2016/2016dlab31/Lab03/01_RTL/IMPOR.db:IMPOR'
Loaded 1 design.
Current design is 'IMPOR'.
IMPOR
current_design $DESIGN
Current design is 'IMPOR'.
{IMPOR}
#======================================================
#  Global Setting
#======================================================
set_wire_load_mode top
1
#======================================================
#  Set Design Constraints
#======================================================
create_clock -name "clk" -period $CLK_period clk
1
#set_ideal_net clk
set_input_delay [expr $CLK_period*0.5] -clock clk [all_inputs]
1
set_output_delay [expr $CLK_period*0.5] -clock clk [all_outputs]
1
set_input_delay 0 -clock clk clk
1
set_input_delay 0 -clock clk rst_n
1
set_load 0.05 [all_outputs]
1
#set hdlin_ff_always_sync_set_reset true
#======================================================
#  Optimization
#======================================================
#uniquify
check_design > Report/$DESIGN\.check
set_fix_multiple_port_nets -all -buffer_constants
1
#set_fix_hold [all_clocks]
compile_ultra
Alib files are up-to-date.
Information: Evaluating DesignWare library utilization. (UISN-27)

============================================================================
| DesignWare Building Block Library       |      Version       | Available |
============================================================================
| Basic DW Building Blocks                | B-2008.09-DWBB_0811 |    *     |
| Licensed DW Building Blocks             | B-2008.09-DWBB_0811 |    *     |
============================================================================

Information: Sequential output inversion is enabled.  SVF file must be used for formal verification. (OPT-1208)

Information: There are 11 potential problems in your design. Please run 'check_design' for more information. (LINT-99)


Loaded alib file './alib-52/slow.db.alib'
Information: Ungrouping 0 of 1 hierarchies before Pass 1 (OPT-775)

  Beginning Pass 1 Mapping
  ------------------------
  Processing 'IMPOR'
Information: The register 'ready_reg' is a constant and will be removed. (OPT-1206)
 Implement Synthetic for 'IMPOR'.
  Processing 'IMPOR_DW01_inc_0'
  Processing 'IMPOR_DW01_inc_1'

  Updating timing information
Information: Updating design information... (UID-85)

  Beginning Mapping Optimizations  (Ultra High effort)
  -------------------------------
  Re-synthesis Optimization (Phase 1)
  Re-synthesis Optimization (Phase 2)
  Global Optimization (Phase 1)
  Global Optimization (Phase 2)
  Global Optimization (Phase 3)
  Global Optimization (Phase 4)
  Global Optimization (Phase 5)
  Global Optimization (Phase 6)
  Global Optimization (Phase 7)
  Global Optimization (Phase 8)
  Global Optimization (Phase 9)
  Global Optimization (Phase 10)
  Global Optimization (Phase 11)
  Global Optimization (Phase 12)
  Global Optimization (Phase 13)
  Global Optimization (Phase 14)
  Global Optimization (Phase 15)
  Global Optimization (Phase 16)
  Global Optimization (Phase 17)
  Global Optimization (Phase 18)
  Global Optimization (Phase 19)
  Global Optimization (Phase 20)
  Global Optimization (Phase 21)
  Global Optimization (Phase 22)
  Global Optimization (Phase 23)
  Global Optimization (Phase 24)
  Global Optimization (Phase 25)
  Global Optimization (Phase 26)
  Global Optimization (Phase 27)
  Global Optimization (Phase 28)
  Global Optimization (Phase 29)
  Global Optimization (Phase 30)
  Global Optimization (Phase 31)

   ELAPSED            WORST NEG TOTAL NEG  DESIGN                            
    TIME      AREA      SLACK     SLACK   RULE COST         ENDPOINT         
  --------- --------- --------- --------- --------- -------------------------
    0:00:15    6285.5      0.00       0.0       0.0                          
    0:00:15    6285.5      0.00       0.0       0.0                          


  Beginning Delay Optimization Phase
  ----------------------------------

   ELAPSED            WORST NEG TOTAL NEG  DESIGN                            
    TIME      AREA      SLACK     SLACK   RULE COST         ENDPOINT         
  --------- --------- --------- --------- --------- -------------------------
    0:00:15    6285.5      0.00       0.0       0.0                          
    0:00:15    6285.5      0.00       0.0       0.0                          
    0:00:15    6285.5      0.00       0.0       0.0                          
    0:00:15    6285.5      0.00       0.0       0.0                          
    0:00:15    6285.5      0.00       0.0       0.0                          
    0:00:15    6285.5      0.00       0.0       0.0                          
    0:00:15    6285.5      0.00       0.0       0.0                          
    0:00:15    6285.5      0.00       0.0       0.0                          
    0:00:15    6310.9      0.00       0.0       0.0                          
    0:00:15    6310.9      0.00       0.0       0.0                          
    0:00:18    6310.9      0.00       0.0       0.0                          
    0:00:18    6310.9      0.00       0.0       0.0                          


  Beginning Area-Recovery Phase  (max_area 0)
  -----------------------------

   ELAPSED            WORST NEG TOTAL NEG  DESIGN                            
    TIME      AREA      SLACK     SLACK   RULE COST         ENDPOINT         
  --------- --------- --------- --------- --------- -------------------------
    0:00:19    6287.2      0.00       0.0       0.0                          
  Global Optimization (Phase 1)
  Global Optimization (Phase 2)
  Global Optimization (Phase 3)
  Global Optimization (Phase 4)
  Global Optimization (Phase 5)
  Global Optimization (Phase 1)
  Global Optimization (Phase 2)
  Global Optimization (Phase 3)
  Global Optimization (Phase 4)
  Global Optimization (Phase 5)
  Global Optimization (Phase 6)
  Global Optimization (Phase 7)
  Global Optimization (Phase 8)
  Global Optimization (Phase 9)
  Global Optimization (Phase 10)
  Global Optimization (Phase 11)
  Global Optimization (Phase 12)
  Global Optimization (Phase 13)
  Global Optimization (Phase 14)
    0:00:19    5993.5      0.00       0.0       0.0                          
    0:00:19    5993.5      0.00       0.0       0.0                          
    0:00:19    5993.5      0.00       0.0       0.0                          
    0:00:19    5993.5      0.00       0.0       0.0                          
    0:00:19    5996.9      0.00       0.0       0.0                          
Loading db file '/cad/CBDLIB/CBDK_IC_Contest_v2.1/SynopsysDC/db/slow.db'

  Optimization Complete
  ---------------------
1
#======================================================
#  Output Reports 
#======================================================
report_timing >  Report/$DESIGN\.timing
report_area >  Report/$DESIGN\.area
#======================================================
#  Change Naming Rule
#======================================================
set bus_inference_style "%s\[%d\]"
%s[%d]
set bus_naming_style "%s\[%d\]"
%s[%d]
set hdlout_internal_busses true
true
change_names -hierarchy -rule verilog
1
define_name_rules name_rule -allowed "a-z A-Z 0-9 _" -max_length 255 -type cell
1
define_name_rules name_rule -allowed "a-z A-Z 0-9 _[]" -max_length 255 -type net
1
define_name_rules name_rule -map {{"\\*cell\\*" "cell"}}
1
change_names -hierarchy -rules name_rule
1
#======================================================
#  Output Results
#======================================================
set verilogout_higher_designs_first true
true
write -format verilog -output Netlist/$DESIGN\_SYN.v -hierarchy
Writing verilog file '/users/dlab2016/2016dlab31/Lab03/02_SYN/Netlist/IMPOR_SYN.v'.
1
write_sdf -version 2.1 -context verilog -load_delay cell Netlist/$DESIGN\_SYN.sdf
Information: Writing timing information to file '/users/dlab2016/2016dlab31/Lab03/02_SYN/Netlist/IMPOR_SYN.sdf'. (WT-3)
1
#======================================================
#  Finish and Quit
#======================================================
report_timing
 
****************************************
Report : timing
        -path full
        -delay max
        -max_paths 1
Design : IMPOR
Version: B-2008.09-SP2
Date   : Fri Oct 28 04:22:36 2016
****************************************

Operating Conditions: slow   Library: slow
Wire Load Model Mode: top

  Startpoint: cnt2_reg_1_
              (rising edge-triggered flip-flop clocked by clk)
  Endpoint: cnt2_reg_20_
            (rising edge-triggered flip-flop clocked by clk)
  Path Group: clk
  Path Type: max

  Point                                    Incr       Path
  -----------------------------------------------------------
  clock clk (rise edge)                    0.00       0.00
  clock network delay (ideal)              0.00       0.00
  cnt2_reg_1_/CK (DFFRX4)                  0.00       0.00 r
  cnt2_reg_1_/Q (DFFRX4)                   0.49       0.49 f
  U377/CO (ADDHX4)                         0.16       0.66 f
  U379/CO (ADDHX4)                         0.14       0.79 f
  U378/CO (ADDHX4)                         0.12       0.91 f
  add_x_41_1_U1_1_4/CO (ADDHXL)            0.15       1.06 f
  add_x_41_1_U1_1_5/CO (ADDHXL)            0.16       1.23 f
  add_x_41_1_U1_1_6/CO (ADDHXL)            0.16       1.39 f
  add_x_41_1_U1_1_7/CO (ADDHXL)            0.16       1.55 f
  add_x_41_1_U1_1_8/CO (ADDHXL)            0.16       1.72 f
  add_x_41_1_U1_1_9/CO (ADDHXL)            0.16       1.88 f
  add_x_41_1_U1_1_10/CO (ADDHXL)           0.16       2.05 f
  add_x_41_1_U1_1_11/CO (ADDHXL)           0.17       2.22 f
  U363/Y (AND3X1)                          0.27       2.48 f
  U383/CO (ADDHX4)                         0.17       2.65 f
  U384/CO (ADDHX4)                         0.12       2.77 f
  add_x_41_1_U1_1_16/CO (ADDHXL)           0.15       2.92 f
  add_x_41_1_U1_1_17/CO (ADDHXL)           0.16       3.08 f
  add_x_41_1_U1_1_18/CO (ADDHXL)           0.17       3.25 f
  U338/Y (NAND2X1)                         0.11       3.37 r
  U373/Y (INVX3)                           0.07       3.44 f
  U380/Y (AOI2BB2X4)                       0.17       3.61 f
  U385/Y (AO22X4)                          0.19       3.79 f
  cnt2_reg_20_/D (DFFRX1)                  0.00       3.79 f
  data arrival time                                   3.79

  clock clk (rise edge)                    4.00       4.00
  clock network delay (ideal)              0.00       4.00
  cnt2_reg_20_/CK (DFFRX1)                 0.00       4.00 r
  library setup time                      -0.20       3.80
  data required time                                  3.80
  -----------------------------------------------------------
  data required time                                  3.80
  data arrival time                                  -3.79
  -----------------------------------------------------------
  slack (MET)                                         0.00


1
exit
Information: Defining new variable 'CLK_period'. (CMD-041)
Information: Defining new variable 'DESIGN'. (CMD-041)

Thank you...
